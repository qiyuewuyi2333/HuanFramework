
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.GameLogic
{
public sealed partial class Effect : Luban.BeanBase
{
    public Effect(ByteBuf _buf) 
    {
        EffectType = (GameLogic.BaseEffectType)_buf.ReadInt();
        {int n0 = _buf.ReadSize(); LevelMap = new System.Collections.Generic.Dictionary<int, int>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { int _k0;  _k0 = _buf.ReadInt(); int _v0;  _v0 = _buf.ReadInt();     LevelMap.Add(_k0, _v0);}}
        Description = _buf.ReadString();
        Duration = (GameLogic.DurationType)_buf.ReadInt();
        Prob = _buf.ReadInt();
    }

    public static Effect DeserializeEffect(ByteBuf _buf)
    {
        return new GameLogic.Effect(_buf);
    }

    public readonly GameLogic.BaseEffectType EffectType;
    public readonly System.Collections.Generic.Dictionary<int, int> LevelMap;
    /// <summary>
    /// 描述内容
    /// </summary>
    public readonly string Description;
    public readonly GameLogic.DurationType Duration;
    public readonly int Prob;
   
    public const int __ID__ = -79986829;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "effectType:" + EffectType + ","
        + "levelMap:" + Luban.StringUtil.CollectionToString(LevelMap) + ","
        + "description:" + Description + ","
        + "duration:" + Duration + ","
        + "prob:" + Prob + ","
        + "}";
    }
}
}

