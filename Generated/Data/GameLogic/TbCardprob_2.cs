
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.GameLogic
{
public partial class TbCardprob_2
{
    private readonly System.Collections.Generic.Dictionary<GameLogic.CardType, GameLogic.Cardprob_2> _dataMap;
    private readonly System.Collections.Generic.List<GameLogic.Cardprob_2> _dataList;
    
    public TbCardprob_2(ByteBuf _buf)
    {
        int n = _buf.ReadSize();
        _dataMap = new System.Collections.Generic.Dictionary<GameLogic.CardType, GameLogic.Cardprob_2>(n);
        _dataList = new System.Collections.Generic.List<GameLogic.Cardprob_2>(n);
        for(int i = n ; i > 0 ; --i)
        {
            GameLogic.Cardprob_2 _v;
            _v = global::cfg.GameLogic.Cardprob_2.DeserializeCardprob_2(_buf);
            _dataList.Add(_v);
            _dataMap.Add(_v.Type, _v);
        }
    }

    public System.Collections.Generic.Dictionary<GameLogic.CardType, GameLogic.Cardprob_2> DataMap => _dataMap;
    public System.Collections.Generic.List<GameLogic.Cardprob_2> DataList => _dataList;

    public GameLogic.Cardprob_2 GetOrDefault(GameLogic.CardType key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public GameLogic.Cardprob_2 Get(GameLogic.CardType key) => _dataMap[key];
    public GameLogic.Cardprob_2 this[GameLogic.CardType key] => _dataMap[key];

    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
    }

}

}

