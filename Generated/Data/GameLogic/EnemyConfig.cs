
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.GameLogic
{
public sealed partial class EnemyConfig : Luban.BeanBase
{
    public EnemyConfig(ByteBuf _buf) 
    {
        EnemyType = (GameLogic.EnemyType)_buf.ReadInt();
        Grade = (GameLogic.EnemyGrade)_buf.ReadInt();
        Health = _buf.ReadInt();
        {int n0 = _buf.ReadSize(); Effect = new System.Collections.Generic.Dictionary<GameLogic.BaseEffectType, int>(n0 * 3 / 2);for(var i0 = 0 ; i0 < n0 ; i0++) { GameLogic.BaseEffectType _k0;  _k0 = (GameLogic.BaseEffectType)_buf.ReadInt(); int _v0;  _v0 = _buf.ReadInt();     Effect.Add(_k0, _v0);}}
        Description = _buf.ReadString();
        Reward = _buf.ReadInt();
        ImagePath = _buf.ReadString();
    }

    public static EnemyConfig DeserializeEnemyConfig(ByteBuf _buf)
    {
        return new GameLogic.EnemyConfig(_buf);
    }

    /// <summary>
    /// 敌人类型作为键值
    /// </summary>
    public readonly GameLogic.EnemyType EnemyType;
    public readonly GameLogic.EnemyGrade Grade;
    public readonly int Health;
    public readonly System.Collections.Generic.Dictionary<GameLogic.BaseEffectType, int> Effect;
    public readonly string Description;
    public readonly int Reward;
    /// <summary>
    /// 图片路径
    /// </summary>
    public readonly string ImagePath;
   
    public const int __ID__ = -656076728;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "enemyType:" + EnemyType + ","
        + "grade:" + Grade + ","
        + "health:" + Health + ","
        + "effect:" + Luban.StringUtil.CollectionToString(Effect) + ","
        + "description:" + Description + ","
        + "reward:" + Reward + ","
        + "imagePath:" + ImagePath + ","
        + "}";
    }
}
}

